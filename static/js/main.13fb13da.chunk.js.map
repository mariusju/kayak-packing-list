{"version":3,"sources":["list.ts","App.tsx","serviceWorker.ts","index.tsx"],"names":["list","miegas","title","checked","daiktai","higiena","vaistinele","rubai","valgymas","maistas","App","listFromStorage","localStorage","getItem","React","useState","JSON","parse","initialList","setList","useEffect","window","setItem","stringify","onClick","removeItem","style","display","Object","entries","map","groupTitle","values","key","type","onChange","e","itemTitle","value","newList","produce","item","find","target","newItem","prompt","push","addItem","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.13fb13da.chunk.js","sourcesContent":["export type List = {\n  [key: string]: Array<{\n    title: string;\n    checked: boolean;\n  }>;\n};\nexport const list: List = {\n  miegas: [\n    { title: \"miegmaisis\", checked: false },\n    { title: \"palapine\", checked: false },\n    { title: \"virvute\", checked: false },\n    { title: \"kilimelis\", checked: false },\n    { title: \"kuoliukai\", checked: false },\n    { title: \"hamakas/hamakai\", checked: false },\n    { title: \"kedes\", checked: false },\n  ],\n\n  daiktai: [\n    { title: \"hermetmaisiai\", checked: false },\n    { title: \"prozektorius\", checked: false },\n    { title: \"power bankas\", checked: false },\n    { title: \"peilis\", checked: false },\n    { title: \"siuksliu maisai\", checked: false },\n    { title: \"purskalas nuo uodu\", checked: false },\n    { title: \"akiniai nuo saules\", checked: false },\n    { title: \"kremas nuo saules\", checked: false },\n    { title: \"degtukai\", checked: false },\n    { title: \"baterijos prozektoriui\", checked: false },\n  ],\n\n  higiena: [\n    { title: \"tualetinis popierius\", checked: false },\n    { title: \"muilas\", checked: false },\n    { title: \"sampunas\", checked: false },\n    { title: \"ranksluostis\", checked: false },\n    { title: \"dantu sepetukas/pasta\", checked: false },\n    { title: \"dezodorantas\", checked: false },\n  ],\n\n  vaistinele: [\n    { title: \"pincetas\", checked: false },\n    { title: \"ibumetinas\", checked: false },\n    { title: \"pleistras\", checked: false },\n    { title: \"slapios serveteles\", checked: false },\n  ],\n\n  rubai: [\n    { title: \"maudimukas\", checked: false },\n    { title: \"kepure nuo saules\", checked: false },\n    { title: \"sandalai\", checked: false },\n    { title: \"kedai\", checked: false },\n    { title: \"kelnes vakarui\", checked: false },\n    { title: \"kelnes plaukimui\", checked: false },\n    { title: \"sortai\", checked: false },\n    { title: \"striuke nuo lietaus\", checked: false },\n    { title: \"ponchas\", checked: false },\n    { title: \"bandana\", checked: false },\n    { title: \"maikutes \", checked: false },\n    { title: \"kojines\", checked: false },\n    { title: \"apatiniai\", checked: false },\n    { title: \"dzemperis vakarui\", checked: false },\n    { title: \"dzemperis plaukimui\", checked: false },\n  ],\n\n  valgymas: [\n    { title: \"sporkai\", checked: false },\n    { title: \"fairy, kempinele\", checked: false },\n    { title: \"dujos, puodai\", checked: false },\n    { title: \"puodeliai\", checked: false },\n    { title: \"tirpi kava\", checked: false },\n    { title: \"lentele\", checked: false },\n    { title: \"skustukas\", checked: false },\n    { title: \"keptuve\", checked: false },\n    { title: \"druska/pipirai\", checked: false },\n  ],\n\n  maistas: [],\n};\n","import React from \"react\";\nimport { list as initialList, List } from \"./list\";\nimport \"./App.css\";\nimport { produce } from \"immer\";\n\nfunction App() {\n  const listFromStorage = localStorage.getItem(\"list\");\n  const [list, setList] = React.useState<List>(\n    listFromStorage ? JSON.parse(listFromStorage) : initialList\n  );\n\n  const onChange = (groupTitle: string, itemTitle: string, value: boolean) => {\n    const newList = produce(list, (list) => {\n      const item = list[groupTitle].find(({ title }) => title === itemTitle);\n      if (item) {\n        item.checked = value;\n      }\n    });\n    setList(newList);\n  };\n\n  React.useEffect(() => {\n    window.localStorage.setItem(\"list\", JSON.stringify(list));\n  }, [list]);\n\n  const reset = () => {\n    window.localStorage.removeItem(\"list\");\n    setList(initialList);\n  };\n\n  const addItem = (groupTitle: string) => {\n    const newItem = prompt(\"Enter item\");\n    if (!newItem) return;\n    const newList = produce(list, (list) => {\n      list[groupTitle].push({ title: newItem, checked: false });\n    });\n    setList(newList);\n  };\n\n  return (\n    <div>\n      <button onClick={reset}>Reset</button>\n      <div style={{display: 'flex'}}>\n        {Object.entries(list).map(([groupTitle, values]) => {\n          return (\n            <div key={groupTitle}>\n              <h4>{groupTitle}</h4>\n              {values.map(({ title, checked }) => {\n                return (\n                  <div key={title}>\n                    <input\n                      type=\"checkbox\"\n                      checked={checked}\n                      onChange={(e) =>\n                        onChange(groupTitle, title, e.target.checked)\n                      }\n                    />\n                    <label>{title}</label>\n                  </div>\n                );\n              })}\n              <button onClick={() => addItem(groupTitle)}>Add</button>\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}